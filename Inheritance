Imagine a publishing company which does marketing for book and audiocassette versions. 
Create a class publication that stores the title (a string) and price (type float) of a publication. 
From this class derive two classes: book, which adds a page count (type int), and tape, which adds a playing time in minutes (type float). 
Write a program that instantiates the book and tape classes, allows user to enter data and displays the data members. 
If an exception is caught, replace all the data member values with zero values.

*/

#include<iostream>
#include<stdlib.h>
#include<string.h>
using namespace std;
class Publisher
{
public:
	char title[20];
	float price;

};
class Book:public Publisher
{
public:
	int m;
	int page;
	void accept();
	void display();

};
void Book::accept()
{
	cout<<"\n***************************";
	cout<<"\nEnter name of book:";
	cin>>title;
	cout<<"\nEnter price of book:";
	cin>>price;
	cout<<"\nEnter number of pages of book:";
	cin>>page;
}
void Book::display()
{
	cout<<"\n"<<title<<"\t"<<price<<"\t"<<page;
}
class Cassette:public Publisher
{
public:
	int m;
	float min;
	void accept1()
	{
		cout<<"\n***************************";
		cout<<"\nEnter title of cassette:";
		cin>>title;
		cout<<"\nEnter price of cassette:";
		cin>>price;
		cout<<"\nEnter total time of record(minutes):";
		cin>>min;
	}
	void display1()
	{
		cout<<"\n"<<title<<"\t"<<price<<"\t"<<min;
	}
};
/*
int main()
{

int m,n;
cout<<"\nTotal no. of bookS:";
cin>>m;
 Book b[m];
for(int i=0;i<m;i++)
{
	b[i].accept();
}
cout<<"\n\t****BOOK DATA IS AS FOLLOWS****";
cout<<"\nTitle\tPrice\tPages";
for(int i=0;i<m;i++)
{
	b[i].display();
}
cout<<"\nTotal no. of cassettes:";
cin>>n;
Cassette c[n];
for(int j=0;j<n;j++)
{
	c[j].accept1();
}
cout<<"\n\t****CASSETTE DATA IS AS FOLLOWS****";
cout<<"\nTitle\tPrice\tMinutes";
for(int j=0;j<m;j++)
{
	c[j].display1();
}



return 0;
}
*/
/*int main()
{

	int m,n,x=0,y=0;
	cout<<"\nTotal no. of bookS:";
	cin>>m;
	 Book b[m];
	 for(int i=0;i<m;i++)
	 		{
	 			b[i].accept();
	 		}
	 cout<<"\n\n\nTotal no. of cassettes:";
	 	cin>>n;
	 	Cassette c[n];
	 		for(int j=0;j<n;j++)
	 		{
	 			c[j].accept1();
	 		}
		for(int i=0,j=0;i<m,j<n;i++,j++)
		{
			try
				{
					if((b[i].price>0||b[i].price<2000)&&(b[i].page>0||b[i].page<200))
					{

						throw(x);
					}
					if((c[j].price>0||c[j].price<2000)&&(c[j].min>0.0||c[j].min<45.6))
					{
						throw(y);
					}

			}
				catch(int x)
				{
					cout<<"\nException Handled.";
					b[i].price=0;
					b[i].page=0;
				}
				catch(int y)
					{
							cout<<"\nException Handled.";
							c[i].price=0;
							c[i].min=0;
				}
		}


return 0;
}*/
int main()
{

	int m,n,x=0,y=0,ch;
	cout<<"\nTotal no. of bookS:";
	cin>>m;
	 Book b[m];
	 for(int i=0;i<m;i++)
	 		{
	 			b[i].accept();
	 		}
	 cout<<"\n\n\nTotal no. of cassettes:";
	 	cin>>n;
	 	Cassette c[n];
	 		for(int j=0;j<n;j++)
	 		{
	 			c[j].accept1();
	 		}
	 		do{
	 			cout<<"\n1.Display data of Books.";
	 			cout<<"\n2.Display data of Cassette.";
	 			cout<<"\n3.Exception handling of Books.";
	 			cout<<"\n4.Exception handling of Cassettes.";
	 			cout<<"\nEnter your choice:";
	 			cin>>ch;
	 			switch(ch)
	 			{
	 			case 1:
	 					cout<<"\n\t****BOOK DATA IS AS FOLLOWS****";
	 					cout<<"\nTitle\tPrice\tPages";
	 					for(int i=0;i<m;i++)
	 					{
	 						b[i].display();
	 					}
	 					break;
	 			case 2:
	 					cout<<"\n\t****CASSETTE DATA IS AS FOLLOWS****";
	 					cout<<"\nTitle\tPrice\tMinutes";
	 					for(int j=0;j<m;j++)
	 					{
	 						c[j].display1();
	 					}
	 					break;
	 			case 3:
	 				for(int i=0;i<m;i++)
	 					{
	 						try
	 							{
	 								if((b[i].price>0||b[i].price<2000)||(b[i].page>0||b[i].page<200))
	 								{

	 									throw(x);
	 								}
	 							}
	 						catch(int x)
	 							{
	 							cout<<"\nException Handled for book "<<i+1<<".";
	 								b[i].price=0;
	 								b[i].page=0;
	 							}
	 					}
	 				break;
	 			case 4:
	 				for(int j=0;j<n;j++)
	 					{
	 						try
	 							{

	 								if((c[j].price>0||c[j].price<200)||(c[j].min>0.0||c[j].min<45.6))
	 								{
	 									throw(y);
	 								}

	 							}

	 							catch(int y)
	 								{
	 										cout<<"\nException Handled for cassette "<<j+1<<".";
	 										c[j].price=0;
	 										c[j].min=0;
	 								}
	 					}
	 				break;


	 			}


	 		}while(ch!=5);
}
/*
OUTPUT:-

Total no. of bookS:2

***************************
Enter name of book:t

Enter price of book:32

Enter number of pages of book:65

***************************
Enter name of book:e

Enter price of book:65

Enter number of pages of book:654



Total no. of cassettes:2

***************************
Enter title of cassette:e

Enter price of cassette:6

Enter total time of record(minutes):65

***************************
Enter title of cassette:w

Enter price of cassette:6

Enter total time of record(minutes):61

1.Display data of Books.
2.Display data of Cassette.
3.Exception handling of Books.
4.Exception handling of Cassettes.
Enter your choice:1

	****BOOK DATA IS AS FOLLOWS****
Title	Price	Pages
t	32	65
e	65	654
1.Display data of Books.
2.Display data of Cassette.
3.Exception handling of Books.
4.Exception handling of Cassettes.
Enter your choice:2

	****CASSETTE DATA IS AS FOLLOWS****
Title	Price	Minutes
e	6	65
w	6	61
1.Display data of Books.
2.Display data of Cassette.
3.Exception handling of Books.
4.Exception handling of Cassettes.
Enter your choice:3

Exception Handled for book 1.
Exception Handled for book 2.
1.Display data of Books.
2.Display data of Cassette.
3.Exception handling of Books.
4.Exception handling of Cassettes.
Enter your choice:4

Exception Handled for cassette 1.
Exception Handled for cassette 2.
1.Display data of Books.
2.Display data of Cassette.
3.Exception handling of Books.
4.Exception handling of Cassettes.
Enter your choice:
*/
